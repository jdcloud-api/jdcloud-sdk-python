# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.


class Data(object):

    def __init__(self, size=None, altitude=None, long_degrees=None, lat_degrees=None, precision_horz=None, precision_vert=None, long_direction=None, long_minutes=None, long_seconds=None, lat_direction=None, lat_minutes=None, lat_seconds=None, service=None, proto=None, name=None, priority=None, weight=None, port=None, target=None, ty_pe=None, key_tag=None, algorithm=None, certificate=None, flags=None, protocol=None, public_key=None, digest_type=None, digest=None, order=None, preference=None, regex=None, replacement=None, usage=None, selector=None, matching_type=None, fingerprint=None, content=None):
        """
        :param size: (Optional) 位置的大小（米）
        :param altitude: (Optional) 位置高度（米）
        :param long_degrees: (Optional) 经度
        :param lat_degrees: (Optional) 纬度
        :param precision_horz: (Optional) 水平定位精度
        :param precision_vert: (Optional) 垂直定位精度
        :param long_direction: (Optional) 经度方向
        :param long_minutes: (Optional) 经度分
        :param long_seconds: (Optional) 经度秒
        :param lat_direction: (Optional) 纬度方向
        :param lat_minutes: (Optional) 纬度分
        :param lat_seconds: (Optional) 纬度秒
        :param service: (Optional) 以下划线为前缀的服务类型
        :param proto: (Optional) 有效的协议
        :param name: (Optional) 有效的主机名
        :param priority: (Optional) 与一些记录如MX和SRV一起使用，以确定优先级。如果你没有为MX记录提供一个优先级，默认值为0将被设置。
        :param weight: (Optional) 记录的权重
        :param port: (Optional) 服务的端口
        :param target: (Optional) 有效的主机名
        :param ty_pe: (Optional) 类型
        :param key_tag: (Optional) Key Tag
        :param algorithm: (Optional) Algorithm
        :param certificate: (Optional) 证书
        :param flags: (Optional) Flags
        :param protocol: (Optional) 协议
        :param public_key: (Optional) 公钥
        :param digest_type: (Optional) 摘要类型
        :param digest: (Optional) 摘要
        :param order: (Optional) Order
        :param preference: (Optional) Preference
        :param regex: (Optional) Regex
        :param replacement: (Optional) Replacement
        :param usage: (Optional) Usage
        :param selector: (Optional) Selector
        :param matching_type: (Optional) Matching Type
        :param fingerprint: (Optional) 指纹
        :param content: (Optional) 记录内容
        """

        self.size = size
        self.altitude = altitude
        self.long_degrees = long_degrees
        self.lat_degrees = lat_degrees
        self.precision_horz = precision_horz
        self.precision_vert = precision_vert
        self.long_direction = long_direction
        self.long_minutes = long_minutes
        self.long_seconds = long_seconds
        self.lat_direction = lat_direction
        self.lat_minutes = lat_minutes
        self.lat_seconds = lat_seconds
        self.service = service
        self.proto = proto
        self.name = name
        self.priority = priority
        self.weight = weight
        self.port = port
        self.target = target
        self.ty_pe = ty_pe
        self.key_tag = key_tag
        self.algorithm = algorithm
        self.certificate = certificate
        self.flags = flags
        self.protocol = protocol
        self.public_key = public_key
        self.digest_type = digest_type
        self.digest = digest
        self.order = order
        self.preference = preference
        self.regex = regex
        self.replacement = replacement
        self.usage = usage
        self.selector = selector
        self.matching_type = matching_type
        self.fingerprint = fingerprint
        self.content = content
