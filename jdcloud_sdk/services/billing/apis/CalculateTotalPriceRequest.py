# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class CalculateTotalPriceRequest(JDCloudRequest):
    """
    查询计费价格信息
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(CalculateTotalPriceRequest, self).__init__(
            '/regions/{regionId}/calculateTotalPrice', 'POST', header, version)
        self.parameters = parameters


class CalculateTotalPriceParameters(object):

    def __init__(self,regionId, cmd, packageCount, ):
        """
        :param regionId: 
        :param cmd: 操作类型 1:新购 2:续费 3:变配
        :param packageCount: 批量购买时数量
        """

        self.regionId = regionId
        self.cmd = cmd
        self.orderList = None
        self.operateTime = None
        self.promotionInfo = None
        self.clientType = None
        self.packageCount = packageCount
        self.processType = None
        self.renewMode = None
        self.unifyExpireDay = None
        self.totalPriceRule = None

    def setOrderList(self, orderList):
        """
        :param orderList: (Optional) 计算价格的订单
        """
        self.orderList = orderList

    def setOperateTime(self, operateTime):
        """
        :param operateTime: (Optional) 操作时间(格式为：yyyy-MM-dd HH:mm:ss)
        """
        self.operateTime = operateTime

    def setPromotionInfo(self, promotionInfo):
        """
        :param promotionInfo: (Optional) 1:折扣（不需要传） 2:免费活动3:付费活动 4:推荐码 5:会员价 [{"promotionType":1,"activityCode":123},{"promotionType":2,"activityCode":}]
        """
        self.promotionInfo = promotionInfo

    def setClientType(self, clientType):
        """
        :param clientType: (Optional) 客户端：1.PC端；2.移动端；
        """
        self.clientType = clientType

    def setProcessType(self, processType):
        """
        :param processType: (Optional) 临时升配时必传，3-临时升配
        """
        self.processType = processType

    def setRenewMode(self, renewMode):
        """
        :param renewMode: (Optional) 续费方式 0：正常续费  1：续费至统一到期日，续费时必传
        """
        self.renewMode = renewMode

    def setUnifyExpireDay(self, unifyExpireDay):
        """
        :param unifyExpireDay: (Optional) 续费统一到期日(1-28)，续费时必传
        """
        self.unifyExpireDay = unifyExpireDay

    def setTotalPriceRule(self, totalPriceRule):
        """
        :param totalPriceRule: (Optional) 计算总价规则 1：计算预付费资源总价（计费类型为包年包月、按次） ；不传计算所有资源总价
        """
        self.totalPriceRule = totalPriceRule

