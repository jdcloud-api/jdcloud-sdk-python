# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusTableDataLoadRequest(JDCloudRequest):
    """
    数据上传
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusTableDataLoadRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusTableDataLoad', 'POST', header, version)
        self.parameters = parameters


class UranusTableDataLoadParameters(object):

    def __init__(self,regionId, appName, fileKey, fileType, projectEnv, projectCode, tableName, importStrategy, resourceCode):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        :param fileKey: 文件路径（key）
        :param fileType: 文件类型：csv、text、xls、xlsx
        :param projectEnv: 项目环境: prod 生产环境、dev开发环境
        :param projectCode: 项目编码
        :param tableName: 目标表名
        :param importStrategy: 导入策略：append 追加、overwrite 覆盖
        :param resourceCode: 资源组编码
        """

        self.regionId = regionId
        self.appName = appName
        self.fileKey = fileKey
        self.fileType = fileType
        self.delimiter = None
        self.characterSet = None
        self.startRow = None
        self.projectEnv = projectEnv
        self.projectCode = projectCode
        self.tableName = tableName
        self.partitionInfos = None
        self.importStrategy = importStrategy
        self.resourceCode = resourceCode

    def setDelimiter(self, delimiter):
        """
        :param delimiter: (Optional) 分隔符: en-comma 英文逗号，en-semicolon 英文分号，space 空格，pipe 竖线，hash 井号，and 与号，line-feed-lf 换行符（UNIX），line-feed-crlf 换行符（Windows）
        """
        self.delimiter = delimiter

    def setCharacterSet(self, characterSet):
        """
        :param characterSet: (Optional) 字符集: GBK、UTF-8、ISO-8859-1
        """
        self.characterSet = characterSet

    def setStartRow(self, startRow):
        """
        :param startRow: (Optional) 导入起始行
        """
        self.startRow = startRow

    def setPartitionInfos(self, partitionInfos):
        """
        :param partitionInfos: (Optional) 导入分区，如果是分区表则必传
        """
        self.partitionInfos = partitionInfos

