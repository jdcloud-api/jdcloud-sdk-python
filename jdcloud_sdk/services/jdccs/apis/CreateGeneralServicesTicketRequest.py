# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class CreateGeneralServicesTicketRequest(JDCloudRequest):
    """
    提交通用服务工单
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(CreateGeneralServicesTicketRequest, self).__init__(
            '/generalServicesTicket', 'POST', header, version)
        self.parameters = parameters


class CreateGeneralServicesTicketParameters(object):

    def __init__(self,):
        """
        """

        self.phone = None
        self.email = None
        self.idc = None
        self.isExternalIdc = None
        self.count = None
        self.externalIdcAddress = None
        self.externalIdcContactPerson = None
        self.externalIdcContactPhone = None
        self.remarks = None
        self.attach = None

    def setPhone(self, phone):
        """
        :param phone: (Optional) 提单人手机号
        """
        self.phone = phone

    def setEmail(self, email):
        """
        :param email: (Optional) 提单人邮箱
        """
        self.email = email

    def setIdc(self, idc):
        """
        :param idc: (Optional) idc机房实例id
        """
        self.idc = idc

    def setIsExternalIdc(self, isExternalIdc):
        """
        :param isExternalIdc: (Optional) 是否是商业化外部机房
        """
        self.isExternalIdc = isExternalIdc

    def setCount(self, count):
        """
        :param count: (Optional) 数量
        """
        self.count = count

    def setExternalIdcAddress(self, externalIdcAddress):
        """
        :param externalIdcAddress: (Optional) 外部机房地址
        """
        self.externalIdcAddress = externalIdcAddress

    def setExternalIdcContactPerson(self, externalIdcContactPerson):
        """
        :param externalIdcContactPerson: (Optional) 外部机房联系人
        """
        self.externalIdcContactPerson = externalIdcContactPerson

    def setExternalIdcContactPhone(self, externalIdcContactPhone):
        """
        :param externalIdcContactPhone: (Optional) 外部机房联系电话
        """
        self.externalIdcContactPhone = externalIdcContactPhone

    def setRemarks(self, remarks):
        """
        :param remarks: (Optional) 描述
        """
        self.remarks = remarks

    def setAttach(self, attach):
        """
        :param attach: (Optional) 附件
        """
        self.attach = attach

