# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusScriptGetScriptRunResultListRequest(JDCloudRequest):
    """
    获取运行脚本结果列表
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusScriptGetScriptRunResultListRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusScriptGetScriptRunResultList', 'POST', header, version)
        self.parameters = parameters


class UranusScriptGetScriptRunResultListParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.fileName = None
        self.fileCode = None
        self.pos = None
        self.lines = None
        self.historyId = None

    def setFileName(self, fileName):
        """
        :param fileName: (Optional) 文件名称 taskId_${结果集数字}  第一个结果就是：1_1,第二个结果集就是：1_2
        """
        self.fileName = fileName

    def setFileCode(self, fileCode):
        """
        :param fileCode: (Optional) 文件业务code
        """
        self.fileCode = fileCode

    def setPos(self, pos):
        """
        :param pos: (Optional) 文件偏移量
        """
        self.pos = pos

    def setLines(self, lines):
        """
        :param lines: (Optional) 读取结果条数
        """
        self.lines = lines

    def setHistoryId(self, historyId):
        """
        :param historyId: (Optional) 运行ID
        """
        self.historyId = historyId

