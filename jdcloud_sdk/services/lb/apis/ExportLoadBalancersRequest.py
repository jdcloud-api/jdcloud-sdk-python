# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class ExportLoadBalancersRequest(JDCloudRequest):
    """
    创建负载均衡列表导出任务
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(ExportLoadBalancersRequest, self).__init__(
            '/regions/{regionId}/loadBalancers:export', 'GET', header, version)
        self.parameters = parameters


class ExportLoadBalancersParameters(object):

    def __init__(self, regionId,):
        """
        :param regionId: Region ID
        """

        self.regionId = regionId
        self.fileType = None
        self.startPage = None
        self.endPage = None
        self.pageSize = None
        self.filters = None
        self.tags = None

    def setFileType(self, fileType):
        """
        :param fileType: (Optional) 导出文件类型, 目前支持excel和csv
        """
        self.fileType = fileType

    def setStartPage(self, startPage):
        """
        :param startPage: (Optional) 开始页码, 默认为1, 取值范围：[1,∞), startPage超过总页数时会报错
        """
        self.startPage = startPage

    def setEndPage(self, endPage):
        """
        :param endPage: (Optional) 结束页码, 取值范围：[startPage,∞), 当startPage未超过总页数, endpage超过总页数, 会返回从开始页码到最后一页的内容
        """
        self.endPage = endPage

    def setPageSize(self, pageSize):
        """
        :param pageSize: (Optional) 分页大小，默认为20，取值范围：[10,100]
        """
        self.pageSize = pageSize

    def setFilters(self, filters):
        """
        :param filters: (Optional) loadBalancerType - 负载均衡类型，取值为：alb、nlb、dnlb，默认alb，支持单个
loadBalancerIds - 负载均衡ID列表，支持多个
loadBalancerNames - 负载均衡名称列表，支持多个
vpcId - 负载均衡所在Vpc的Id，支持单个
azType - 负载均衡az类型，取值：all(全部类型)，standard(标准负载均衡)，edge(边缘负载均衡)，默认standard ，支持单个
azs - 可用区，支持多个
columns - 不指定则默认导出基本表头："LB ID", "LB Name", "LB Type", "Region"
  可选字段值：
    az：lb所属可用区，对应表头"Availability Zone"
    privateIpAddress：lb的vip地址，对应表头"VIP"
    elasticIp：lb的公网IP，对应表头"EIP IPv4 Address"、"EIP IPv4 Bandwidth"
    ipv6Address：lb的ipv6地址，对应表头"IPv6 Address"
    vpc/subnet：lb所属的vpc及子网，对应表头"VPC ID"、"VPC Name"、"Subnet ID"、"Subnet Name"
    deleteProtection：是否开启删除保护，对应表头"Delete Protection"
    charge：lb的计费信息，对应表头"LB Billing Type"、"Creation Time"
    state：lb状态，对应表头"Status"
    tag：lb绑定的标签，对应表头"Tag"
    description：lb的描述信息，对应表头"Description"

        """
        self.filters = filters

    def setTags(self, tags):
        """
        :param tags: (Optional) Tag筛选条件
        """
        self.tags = tags

