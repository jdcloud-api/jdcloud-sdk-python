# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusExtraRunnerStartRequest(JDCloudRequest):
    """
    执行查询
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusExtraRunnerStartRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusExtraRunnerStart', 'POST', header, version)
        self.parameters = parameters


class UranusExtraRunnerStartParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.flowCode = None
        self.content = None
        self.execEngine = None
        self.args = None
        self.resourceName = None
        self.resourceCode = None

    def setFlowCode(self, flowCode):
        """
        :param flowCode: (Optional) 流程code
        """
        self.flowCode = flowCode

    def setContent(self, content):
        """
        :param content: (Optional) 脚本内容
        """
        self.content = content

    def setExecEngine(self, execEngine):
        """
        :param execEngine: (Optional) 执行引擎MapReduce,Spark,Tez,presto,Python2,Python3,auto,默认spark
        """
        self.execEngine = execEngine

    def setArgs(self, args):
        """
        :param args: (Optional) 脚本内容的变量参数配置
        """
        self.args = args

    def setResourceName(self, resourceName):
        """
        :param resourceName: (Optional) 资源组名称
        """
        self.resourceName = resourceName

    def setResourceCode(self, resourceCode):
        """
        :param resourceCode: (Optional) 资源组code
        """
        self.resourceCode = resourceCode

