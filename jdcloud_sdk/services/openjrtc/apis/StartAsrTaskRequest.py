# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class StartAsrTaskRequest(JDCloudRequest):
    """
    开启语音识别功能

    """

    def __init__(self, parameters, header=None, version="v1"):
        super(StartAsrTaskRequest, self).__init__(
            '/startAsrTask', 'POST', header, version)
        self.parameters = parameters


class StartAsrTaskParameters(object):

    def __init__(self,):
        """
        """

        self.appId = None
        self.userRoomId = None
        self.asrTaskType = None
        self.aiModel = None
        self.extInfo = None
        self.subtitle = None

    def setAppId(self, appId):
        """
        :param appId: (Optional) 应用ID
        """
        self.appId = appId

    def setUserRoomId(self, userRoomId):
        """
        :param userRoomId: (Optional) 业务接入方定义的且在JRTC系统内注册过的房间号
        """
        self.userRoomId = userRoomId

    def setAsrTaskType(self, asrTaskType):
        """
        :param asrTaskType: (Optional) 语音任务类型 0-转写 1-翻译； asrTaskType =0 Subtitle不生效；asrTaskType =1 Subtitle.enableTranslate=true(转写+翻译)Subtitle.enableTranslate=false(只转写)
        """
        self.asrTaskType = asrTaskType

    def setAiModel(self, aiModel):
        """
        :param aiModel: (Optional) ai模型
        """
        self.aiModel = aiModel

    def setExtInfo(self, extInfo):
        """
        :param extInfo: (Optional) 附加参数
        """
        self.extInfo = extInfo

    def setSubtitle(self, subtitle):
        """
        :param subtitle: (Optional) 字幕配置
        """
        self.subtitle = subtitle

