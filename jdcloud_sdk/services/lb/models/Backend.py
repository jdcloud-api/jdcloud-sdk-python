# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.


class Backend(object):

    def __init__(self, backendId=None, backendName=None, loadBalancerId=None, loadBalancerType=None, protocol=None, port=None, algorithm=None, targetGroupIds=None, agIds=None, agInfos=None, proxyProtocol=None, description=None, connectionDrainingSeconds=None, sessionStickiness=None, sessionStickyTimeout=None, httpCookieExpireSeconds=None, httpForwardedProtocol=None, httpForwardedPort=None, httpForwardedHost=None, httpForwardedVip=None, httpForwardedClientPort=None, healthCheck=None, createdTime=None):
        """
        :param backendId: (Optional) 后端服务的Id
        :param backendName: (Optional) 后端服务的名字
        :param loadBalancerId: (Optional) 后端服务所属loadBalancer的Id
        :param loadBalancerType: (Optional) 后端服务所属负载均衡类型，取值为：alb、nlb、dnlb
        :param protocol: (Optional) 后端服务的协议 <br>【alb】包括Http，Tcp，Udp <br>【nlb】包括Tcp，Udp <br>【dnlb】包括Tcp，Udp
        :param port: (Optional) 后端服务的端口，取值范围为[1, 65535]
        :param algorithm: (Optional) 调度算法 <br>【alb,nlb】取值范围为[IpHash, RoundRobin, LeastConn]（取值范围的含义：加权源Ip哈希，加权轮询和加权最小连接） <br>【dnlb】取值范围为[IpHash, QuintupleHash]（取值范围的含义分别为：加权源Ip哈希和加权五元组哈希）
        :param targetGroupIds: (Optional) 虚拟服务器组的Id列表，目前只支持一个，且与agIds不能同时存在
        :param agIds: (Optional) 高可用组的Id列表，目前只支持一个，且与targetGroupIds不能同时存在
        :param agInfos: (Optional) 高可用组属性设置:1.defatult_weight:默认权重
        :param proxyProtocol: (Optional) 【alb Tcp/Udp协议】通过Proxy Protocol协议获取真实ip, 取值为False(不获取)或者True(获取,支持v1版本)
        :param description: (Optional) 后端服务的描述信息
        :param connectionDrainingSeconds: (Optional) 【nlb】连接耗尽超时，移除target前连接的最大保持时间，范围[0，3600]
        :param sessionStickiness: (Optional) 会话保持, 取值为false(不开启)或者true(开启) <br>【alb Http协议，RoundRobin算法】支持基于cookie的会话保持 <br>【nlb】支持基于报文源目的IP的会话保持
        :param sessionStickyTimeout: (Optional) 【nlb】会话保持超时时间，sessionStickiness开启时生效，默认300s, 范围[1-3600]
        :param httpCookieExpireSeconds: (Optional) 【alb Http协议】cookie的过期时间,sessionStickiness开启时生效，取值范围为[0,86400], 0表示cookie与浏览器同生命周期
        :param httpForwardedProtocol: (Optional) 【alb http协议】获取负载均衡的协议, 取值为False(不获取)或True(获取)
        :param httpForwardedPort: (Optional) 【alb http协议】获取负载均衡的端口, 取值为False(不获取)或True(获取)
        :param httpForwardedHost: (Optional) 【alb http协议】获取负载均衡的host信息, 取值为False(不获取)或True(获取)
        :param httpForwardedVip: (Optional) 【alb http协议】获取负载均衡的vip, 取值为False(不获取)或True(获取)
        :param httpForwardedClientPort: (Optional) 【alb Http协议】获取请求端使用的端口, 取值为False(不获取)或True(获取)
        :param healthCheck: (Optional) 健康检查
        :param createdTime: (Optional) 后端服务的创建时间
        """

        self.backendId = backendId
        self.backendName = backendName
        self.loadBalancerId = loadBalancerId
        self.loadBalancerType = loadBalancerType
        self.protocol = protocol
        self.port = port
        self.algorithm = algorithm
        self.targetGroupIds = targetGroupIds
        self.agIds = agIds
        self.agInfos = agInfos
        self.proxyProtocol = proxyProtocol
        self.description = description
        self.connectionDrainingSeconds = connectionDrainingSeconds
        self.sessionStickiness = sessionStickiness
        self.sessionStickyTimeout = sessionStickyTimeout
        self.httpCookieExpireSeconds = httpCookieExpireSeconds
        self.httpForwardedProtocol = httpForwardedProtocol
        self.httpForwardedPort = httpForwardedPort
        self.httpForwardedHost = httpForwardedHost
        self.httpForwardedVip = httpForwardedVip
        self.httpForwardedClientPort = httpForwardedClientPort
        self.healthCheck = healthCheck
        self.createdTime = createdTime
