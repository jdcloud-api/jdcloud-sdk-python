# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusQueryListRequest(JDCloudRequest):
    """
    工作流目录树
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusQueryListRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusQueryList', 'POST', header, version)
        self.parameters = parameters


class UranusQueryListParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.keyWord = None
        self.catalogCode = None
        self.flowCode = None
        self.searchType = None

    def setKeyWord(self, keyWord):
        """
        :param keyWord: (Optional) 关键字查询
        """
        self.keyWord = keyWord

    def setCatalogCode(self, catalogCode):
        """
        :param catalogCode: (Optional) 目录code
        """
        self.catalogCode = catalogCode

    def setFlowCode(self, flowCode):
        """
        :param flowCode: (Optional) 工作流code
        """
        self.flowCode = flowCode

    def setSearchType(self, searchType):
        """
        :param searchType: (Optional) 查询过滤条件  all 全部、recent 最近使用、join 参数、collection 收藏
        """
        self.searchType = searchType

