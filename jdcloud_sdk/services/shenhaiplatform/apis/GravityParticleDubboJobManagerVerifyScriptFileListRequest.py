# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class GravityParticleDubboJobManagerVerifyScriptFileListRequest(JDCloudRequest):
    """
    根据作业类型，校验脚本文件扩展名是否合法
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(GravityParticleDubboJobManagerVerifyScriptFileListRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/gravityParticleDubboJobManagerVerifyScriptFileList', 'POST', header, version)
        self.parameters = parameters


class GravityParticleDubboJobManagerVerifyScriptFileListParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.scriptByte = None
        self.scriptName = None
        self.jobName = None
        self.scriptType = None

    def setScriptByte(self, scriptByte):
        """
        :param scriptByte: (Optional) 脚本文件字节数组
        """
        self.scriptByte = scriptByte

    def setScriptName(self, scriptName):
        """
        :param scriptName: (Optional) 脚本名称
        """
        self.scriptName = scriptName

    def setJobName(self, jobName):
        """
        :param jobName: (Optional) 任务名称
        """
        self.jobName = jobName

    def setScriptType(self, scriptType):
        """
        :param scriptType: (Optional) 脚本类型
        """
        self.scriptType = scriptType

