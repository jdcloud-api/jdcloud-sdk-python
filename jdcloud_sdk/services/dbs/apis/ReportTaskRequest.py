# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class ReportTaskRequest(JDCloudRequest):
    """
    上报任务的状态
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(ReportTaskRequest, self).__init__(
            '/regions/{regionId}/task', 'POST', header, version)
        self.parameters = parameters


class ReportTaskParameters(object):

    def __init__(self, regionId,agent, taskType, progress, ):
        """
        :param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》]
        :param agent: 
        :param taskType: 
        :param progress: 
        """

        self.regionId = regionId
        self.agent = agent
        self.taskType = taskType
        self.planId = None
        self.progress = progress
        self.startTime = None
        self.endTime = None
        self.success = None
        self.errorMessage = None

    def setPlanId(self, planId):
        """
        :param planId: (Optional) 
        """
        self.planId = planId

    def setStartTime(self, startTime):
        """
        :param startTime: (Optional) 
        """
        self.startTime = startTime

    def setEndTime(self, endTime):
        """
        :param endTime: (Optional) 
        """
        self.endTime = endTime

    def setSuccess(self, success):
        """
        :param success: (Optional) 
        """
        self.success = success

    def setErrorMessage(self, errorMessage):
        """
        :param errorMessage: (Optional) 
        """
        self.errorMessage = errorMessage

