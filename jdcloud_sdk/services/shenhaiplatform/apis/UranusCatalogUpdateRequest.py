# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusCatalogUpdateRequest(JDCloudRequest):
    """
    修改目录属性
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusCatalogUpdateRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusCatalogUpdate', 'POST', header, version)
        self.parameters = parameters


class UranusCatalogUpdateParameters(object):

    def __init__(self,regionId, appName, catalogCode, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        :param catalogCode: 目录code
        """

        self.regionId = regionId
        self.appName = appName
        self.unrealId = None
        self.catalogCode = catalogCode
        self.catalogName = None
        self.catalogType = None
        self.parentCode = None
        self.childrenNum = None

    def setUnrealId(self, unrealId):
        """
        :param unrealId: (Optional) 前端排序唯一ID
        """
        self.unrealId = unrealId

    def setCatalogName(self, catalogName):
        """
        :param catalogName: (Optional) 目录名称
        """
        self.catalogName = catalogName

    def setCatalogType(self, catalogType):
        """
        :param catalogType: (Optional) 0：非叶子目录， 1：叶子目录
        """
        self.catalogType = catalogType

    def setParentCode(self, parentCode):
        """
        :param parentCode: (Optional) 父目录code
        """
        self.parentCode = parentCode

    def setChildrenNum(self, childrenNum):
        """
        :param childrenNum: (Optional) 子节点数量
        """
        self.childrenNum = childrenNum

