# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class WorkspaceStopExpireOrDeleteRequest(JDCloudRequest):
    """
    同步工作空间续费消息
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(WorkspaceStopExpireOrDeleteRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/workspaceStopExpireOrDelete', 'POST', header, version)
        self.parameters = parameters


class WorkspaceStopExpireOrDeleteParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.companyCode = None
        self.account = None
        self.handleStatus = None
        self.region = None
        self.sourceId = None
        self.resourceId = None

    def setCompanyCode(self, companyCode):
        """
        :param companyCode: (Optional) 
        """
        self.companyCode = companyCode

    def setAccount(self, account):
        """
        :param account: (Optional) 主账户pin
        """
        self.account = account

    def setHandleStatus(self, handleStatus):
        """
        :param handleStatus: (Optional) 类型:过期停服 或 过期删除
        """
        self.handleStatus = handleStatus

    def setRegion(self, region):
        """
        :param region: (Optional) 地区
        """
        self.region = region

    def setSourceId(self, sourceId):
        """
        :param sourceId: (Optional) 
        """
        self.sourceId = sourceId

    def setResourceId(self, resourceId):
        """
        :param resourceId: (Optional) 
        """
        self.resourceId = resourceId

