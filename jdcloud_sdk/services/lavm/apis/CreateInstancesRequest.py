# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class CreateInstancesRequest(JDCloudRequest):
    """
    创建一台或多台轻量应用云主机。

    """

    def __init__(self, parameters, header=None, version="v1"):
        super(CreateInstancesRequest, self).__init__(
            '/regions/{regionId}/instances', 'POST', header, version)
        self.parameters = parameters


class CreateInstancesParameters(object):

    def __init__(self,regionId, imageId, planId, period, ):
        """
        :param regionId: regionId

        :param imageId: 镜像ID

        :param planId: 套餐ID

        :param period: 购买资源的时长, 默认按月计ChargeUnit="month"。ChargeUnit="month"时，取值1到9，12，24，36个月，即{1-9,12,24,36}；ChargeUnit="day"时，取值1到30天，即{1-30}

        """

        self.regionId = regionId
        self.imageId = imageId
        self.planId = planId
        self.chargeUnit = None
        self.period = period
        self.autoRenew = None
        self.amount = None
        self.name = None
        self.chargeType = None
        self.clientToken = None
        self.password = None
        self.keyNames = None
        self.passwordAuth = None
        self.buyScenario = None

    def setChargeUnit(self, chargeUnit):
        """
        :param chargeUnit: (Optional) 购买资源的时长单位，取值为"day"或"month"，默认按月"month"

        """
        self.chargeUnit = chargeUnit

    def setAutoRenew(self, autoRenew):
        """
        :param autoRenew: (Optional) 是否开启到期自动续费

        """
        self.autoRenew = autoRenew

    def setAmount(self, amount):
        """
        :param amount: (Optional) 创建轻量应用云主机的数量

        """
        self.amount = amount

    def setName(self, name):
        """
        :param name: (Optional) 实例名称。长度最长128个字符，只允许中文、数字、大小写字母、英文下划线（\_）、连字符（-）及点（.），不能以（.）作为首尾。

        """
        self.name = name

    def setChargeType(self, chargeType):
        """
        :param chargeType: (Optional) 计费方式。取值：prepaid_by_duration, 目前仅支持包年包月计费方式。

        """
        self.chargeType = chargeType

    def setClientToken(self, clientToken):
        """
        :param clientToken: (Optional) 用于保证请求的幂等性。由客户端生成，并确保不同请求中该参数唯一，长度不能超过64个字符。

        """
        self.clientToken = clientToken

    def setPassword(self, password):
        """
        :param password: (Optional) 实例密码。可用于SSH登录和VNC登录。长度为8\~30个字符，必须同时包含大、小写英文字母、数字和特殊符号中的三类字符。特殊符号包括：\(\)\`~!@#$%^&\*\_-+=\|{}\[ ]:";'<>,.?/，
如指定密钥，则密码不会生成注入，否则即使不指定密码系统也将默认自动生成随机密码，并以短信和邮件通知。

        """
        self.password = password

    def setKeyNames(self, keyNames):
        """
        :param keyNames: (Optional) 密钥对名称。仅Linux系统下该参数生效，当前仅支持输入单个密钥。

        """
        self.keyNames = keyNames

    def setPasswordAuth(self, passwordAuth):
        """
        :param passwordAuth: (Optional) 密码授权，若存在密匙，则根据此参数决定是否使用密码，若没有密匙，此参数无效，会强制使用密码。
若不使用密码，且密匙对解绑后，用户需重置密码，方可使用密码登录。
此参数在windows系统中必须为yes。

        """
        self.passwordAuth = passwordAuth

    def setBuyScenario(self, buyScenario):
        """
        :param buyScenario: (Optional) 产品线统一活动凭证JSON字符串，需要BASE64编码，目前要求编码前格式为 {"activity":{"activityType":必填字段, "activityIdentifier":必填字段}}
        """
        self.buyScenario = buyScenario

