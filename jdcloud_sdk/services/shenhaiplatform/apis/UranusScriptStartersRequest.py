# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusScriptStartersRequest(JDCloudRequest):
    """
    执行脚本
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusScriptStartersRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusScriptStarters', 'POST', header, version)
        self.parameters = parameters


class UranusScriptStartersParameters(object):

    def __init__(self,regionId, appName, flowCode, dataSourceCode, fileCode, fileName, fileType, content, execEngine, segment, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        :param flowCode: 流程code
        :param dataSourceCode: 数据源code
        :param fileCode: 文件code
        :param fileName: 文件名称
        :param fileType: 文件类型 SQL,SHELL,PYTHON,PERL,R,SparkJar,StarRocks,MySQL
        :param content: 脚本内容
        :param execEngine: sql执行引擎 apReduce,Spark,Tez,presto,Python2,Python3,auto,StarRocks,MySQL
        :param segment: sql脚本是否全部执行 是false,否true
        """

        self.regionId = regionId
        self.appName = appName
        self.flowCode = flowCode
        self.dataSourceCode = dataSourceCode
        self.fileCode = fileCode
        self.fileName = fileName
        self.fileType = fileType
        self.content = content
        self.execEngine = execEngine
        self.args = None
        self.segment = segment
        self.resourceName = None
        self.resourceCode = None
        self.loopInfo = None

    def setArgs(self, args):
        """
        :param args: (Optional) 脚本参数配置
        """
        self.args = args

    def setResourceName(self, resourceName):
        """
        :param resourceName: (Optional) 队列名称
        """
        self.resourceName = resourceName

    def setResourceCode(self, resourceCode):
        """
        :param resourceCode: (Optional) 队列code
        """
        self.resourceCode = resourceCode

    def setLoopInfo(self, loopInfo):
        """
        :param loopInfo: (Optional) 循环节点信息
        """
        self.loopInfo = loopInfo

