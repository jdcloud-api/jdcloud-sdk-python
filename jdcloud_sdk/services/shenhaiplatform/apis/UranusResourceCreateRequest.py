# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusResourceCreateRequest(JDCloudRequest):
    """
    新建资源（包含资源目录和资源文件）
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusResourceCreateRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusResourceCreate', 'POST', header, version)
        self.parameters = parameters


class UranusResourceCreateParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.resourceName = None
        self.originalName = None
        self.parentCode = None
        self.resourceType = None
        self.relativeEngine = None
        self.uploadMode = None
        self.env = None
        self.managers = None

    def setResourceName(self, resourceName):
        """
        :param resourceName: (Optional) 资源名称（支持中文、字母、数字、下划线，不超过50个字符）
        """
        self.resourceName = resourceName

    def setOriginalName(self, originalName):
        """
        :param originalName: (Optional) 原始资源名称（上传的原始文件在本地客户端的文件名称）
        """
        self.originalName = originalName

    def setParentCode(self, parentCode):
        """
        :param parentCode: (Optional) 父资源code（目录的根目录的父资源code为ROOT）
        """
        self.parentCode = parentCode

    def setResourceType(self, resourceType):
        """
        :param resourceType: (Optional) 资源类型（DIRECTORY：目录；JAR：java的jar文件；FILE：其他普通文件；ARCHIVE：其他压缩文件/归档文件）
        """
        self.resourceType = resourceType

    def setRelativeEngine(self, relativeEngine):
        """
        :param relativeEngine: (Optional) 关联引擎（默认为JCW）
        """
        self.relativeEngine = relativeEngine

    def setUploadMode(self, uploadMode):
        """
        :param uploadMode: (Optional) 文件上传方式（默认为本地上传）
        """
        self.uploadMode = uploadMode

    def setEnv(self, env):
        """
        :param env: (Optional) 环境信息（prod：生产环境；dev：开发环境），简单模式默认为prod
        """
        self.env = env

    def setManagers(self, managers):
        """
        :param managers: (Optional) 负责人
        """
        self.managers = managers

