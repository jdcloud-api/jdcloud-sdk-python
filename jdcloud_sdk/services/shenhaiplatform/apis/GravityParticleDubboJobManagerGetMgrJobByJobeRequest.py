# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class GravityParticleDubboJobManagerGetMgrJobByJobeRequest(JDCloudRequest):
    """
    重新上线接口 根据文件id和版本号
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(GravityParticleDubboJobManagerGetMgrJobByJobeRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/gravityParticleDubboJobManagerGetMgrJobByJobe', 'POST', header, version)
        self.parameters = parameters


class GravityParticleDubboJobManagerGetMgrJobByJobeParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.userName = None
        self.remark = None
        self.jobNames = None
        self.fileId = None
        self.version = None
        self.publishDesc = None
        self.manager = None
        self.jobManager = None

    def setUserName(self, userName):
        """
        :param userName: (Optional) 
        """
        self.userName = userName

    def setRemark(self, remark):
        """
        :param remark: (Optional) 
        """
        self.remark = remark

    def setJobNames(self, jobNames):
        """
        :param jobNames: (Optional) 
        """
        self.jobNames = jobNames

    def setFileId(self, fileId):
        """
        :param fileId: (Optional) 
        """
        self.fileId = fileId

    def setVersion(self, version):
        """
        :param version: (Optional) 
        """
        self.version = version

    def setPublishDesc(self, publishDesc):
        """
        :param publishDesc: (Optional) 
        """
        self.publishDesc = publishDesc

    def setManager(self, manager):
        """
        :param manager: (Optional) 
        """
        self.manager = manager

    def setJobManager(self, jobManager):
        """
        :param jobManager: (Optional) 
        """
        self.jobManager = jobManager

