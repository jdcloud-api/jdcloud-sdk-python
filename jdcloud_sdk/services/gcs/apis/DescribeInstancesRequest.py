# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class DescribeInstancesRequest(JDCloudRequest):
    """
    查询GPU容器实例列表
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(DescribeInstancesRequest, self).__init__(
            '/regions/{regionId}/describeInstances', 'GET', header, version)
        self.parameters = parameters


class DescribeInstancesParameters(object):

    def __init__(self,regionId, ):
        """
        :param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域
        """

        self.regionId = regionId
        self.pageNumber = None
        self.pageSize = None
        self.az = None
        self.namespace = None
        self.instanceId = None
        self.instanceName = None
        self.status = None
        self.channel = None
        self.ids = None
        self.filters = None

    def setPageNumber(self, pageNumber):
        """
        :param pageNumber: (Optional) 页码；默认为1
        """
        self.pageNumber = pageNumber

    def setPageSize(self, pageSize):
        """
        :param pageSize: (Optional) 分页大小；默认为20；取值范围[20, 100]
        """
        self.pageSize = pageSize

    def setAz(self, az):
        """
        :param az: (Optional) 可用区
        """
        self.az = az

    def setNamespace(self, namespace):
        """
        :param namespace: (Optional) 名称空间
        """
        self.namespace = namespace

    def setInstanceId(self, instanceId):
        """
        :param instanceId: (Optional) gcs uuid
        """
        self.instanceId = instanceId

    def setInstanceName(self, instanceName):
        """
        :param instanceName: (Optional) 实例名称
        """
        self.instanceName = instanceName

    def setStatus(self, status):
        """
        :param status: (Optional) 运行状态：running|stopped|creating
        """
        self.status = status

    def setChannel(self, channel):
        """
        :param channel: (Optional) 订单渠道：aidc(默认)|yunding
        """
        self.channel = channel

    def setIds(self, ids):
        """
        :param ids: (Optional) instance id list 逗号分隔
        """
        self.ids = ids

    def setFilters(self, filters):
        """
        :param filters: (Optional) 容器实例ID，精确匹配，支持多个

        """
        self.filters = filters

