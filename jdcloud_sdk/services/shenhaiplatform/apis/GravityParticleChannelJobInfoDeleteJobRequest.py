# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class GravityParticleChannelJobInfoDeleteJobRequest(JDCloudRequest):
    """
    删除作业以及子作业和质量作业
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(GravityParticleChannelJobInfoDeleteJobRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/gravityParticleChannelJobInfoDeleteJob', 'POST', header, version)
        self.parameters = parameters


class GravityParticleChannelJobInfoDeleteJobParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.jobName = None
        self.isDelSonJob = None
        self.isDelQualityJob = None
        self.user_roles = None
        self.username = None

    def setJobName(self, jobName):
        """
        :param jobName: (Optional) 作业名称
        """
        self.jobName = jobName

    def setIsDelSonJob(self, isDelSonJob):
        """
        :param isDelSonJob: (Optional) 是否删除子作业 1删除   0不删
        """
        self.isDelSonJob = isDelSonJob

    def setIsDelQualityJob(self, isDelQualityJob):
        """
        :param isDelQualityJob: (Optional) 是否删除质量作业  1删除   0不删
        """
        self.isDelQualityJob = isDelQualityJob

    def setUser_roles(self, user_roles):
        """
        :param user_roles: (Optional) 用户角色列表
        """
        self.user_roles = user_roles

    def setUsername(self, username):
        """
        :param username: (Optional) 作业负责人
        """
        self.username = username

