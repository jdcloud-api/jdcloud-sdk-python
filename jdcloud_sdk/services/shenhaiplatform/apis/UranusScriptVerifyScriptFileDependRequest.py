# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusScriptVerifyScriptFileDependRequest(JDCloudRequest):
    """
    脚本检测依赖
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusScriptVerifyScriptFileDependRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusScriptVerifyScriptFileDepend', 'POST', header, version)
        self.parameters = parameters


class UranusScriptVerifyScriptFileDependParameters(object):

    def __init__(self,regionId, appName, content, fileCode, fileType, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        :param content: 脚本内容
        :param fileCode: 文件Code
        :param fileType: 文件类型
        """

        self.regionId = regionId
        self.appName = appName
        self.content = content
        self.fileCode = fileCode
        self.fileType = fileType
        self.scriptName = None
        self.scriptByte = None
        self.jobName = None
        self.dependencies = None
        self.scriptType = None
        self.targetTables = None
        self.saveRelFlag = None

    def setScriptName(self, scriptName):
        """
        :param scriptName: (Optional) 脚本名称
        """
        self.scriptName = scriptName

    def setScriptByte(self, scriptByte):
        """
        :param scriptByte: (Optional) 脚本字节
        """
        self.scriptByte = scriptByte

    def setJobName(self, jobName):
        """
        :param jobName: (Optional) 任务名称
        """
        self.jobName = jobName

    def setDependencies(self, dependencies):
        """
        :param dependencies: (Optional) 依赖任务名称
        """
        self.dependencies = dependencies

    def setScriptType(self, scriptType):
        """
        :param scriptType: (Optional) 脚本类型
        """
        self.scriptType = scriptType

    def setTargetTables(self, targetTables):
        """
        :param targetTables: (Optional) 目标表
        """
        self.targetTables = targetTables

    def setSaveRelFlag(self, saveRelFlag):
        """
        :param saveRelFlag: (Optional) 是否保存脚本中解析出来的表相关信息
        """
        self.saveRelFlag = saveRelFlag

