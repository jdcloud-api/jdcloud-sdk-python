# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.


class UranusUploaderChunkReq(object):

    def __init__(self, flowCode, filename, fileTypeCode=None, isJarManagement=None, relativePath=None, uploadId=None, chunkNumber=None, totalChunks=None, chunkSize=None, currentChunkSize=None, totalSize=None, file=None, fileBytes=None, partETagList=None):
        """
        :param fileTypeCode: (Optional) 文件类型
        :param isJarManagement: (Optional) 是否spark-jar的管理模块,spark-jar操作hdfs通过字段区分
        :param flowCode:  任务流Code
        :param relativePath: (Optional) 文件夹上传的时候文件的相对路径属性
        :param uploadId: (Optional) 文件唯一标识
        :param chunkNumber: (Optional) 当前块的次序，第一个块是 1，注意不是从 0 开始的
        :param totalChunks: (Optional) 文件被分成块的总数
        :param chunkSize: (Optional) 分块大小，根据 totalSize 和这个值你就可以计算出总共的块数。注意最后一块的大小可能会比这个要大
        :param currentChunkSize: (Optional) 当前块的大小，实际大小
        :param totalSize: (Optional) 文件总大小
        :param filename:  文件名
        :param file: (Optional) 
        :param fileBytes: (Optional) 文件字节数组
        :param partETagList: (Optional) partETagList
        """

        self.fileTypeCode = fileTypeCode
        self.isJarManagement = isJarManagement
        self.flowCode = flowCode
        self.relativePath = relativePath
        self.uploadId = uploadId
        self.chunkNumber = chunkNumber
        self.totalChunks = totalChunks
        self.chunkSize = chunkSize
        self.currentChunkSize = currentChunkSize
        self.totalSize = totalSize
        self.filename = filename
        self.file = file
        self.fileBytes = fileBytes
        self.partETagList = partETagList
