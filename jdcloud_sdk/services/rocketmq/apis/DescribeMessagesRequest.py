# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class DescribeMessagesRequest(JDCloudRequest):
    """
    查询消息列表
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(DescribeMessagesRequest, self).__init__(
            '/regions/{regionId}/instances/{instanceId}/topics/{topic}/messages', 'GET', header, version)
        self.parameters = parameters


class DescribeMessagesParameters(object):

    def __init__(self,regionId, instanceId, topic, pageSize, pageNumber):
        """
        :param regionId: 区域ID
        :param instanceId: 实例id
        :param topic: topic 名称
        :param pageSize: 分页大小；
        :param pageNumber: 页码
        """

        self.regionId = regionId
        self.instanceId = instanceId
        self.topic = topic
        self.messageId = None
        self.key = None
        self.begin = None
        self.end = None
        self.pageSize = pageSize
        self.pageNumber = pageNumber

    def setMessageId(self, messageId):
        """
        :param messageId: (Optional) 如果填写了就按messageId查询
        """
        self.messageId = messageId

    def setKey(self, key):
        """
        :param key: (Optional) 如果填写了就按key查询
        """
        self.key = key

    def setBegin(self, begin):
        """
        :param begin: (Optional) 开始时间
        """
        self.begin = begin

    def setEnd(self, end):
        """
        :param end: (Optional) 结束时间
        """
        self.end = end

