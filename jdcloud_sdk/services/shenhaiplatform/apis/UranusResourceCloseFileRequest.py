# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UranusResourceCloseFileRequest(JDCloudRequest):
    """
    完成并关闭资源上传
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(UranusResourceCloseFileRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/uranusResourceCloseFile', 'POST', header, version)
        self.parameters = parameters


class UranusResourceCloseFileParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.resourceCode = None
        self.sliceTotal = None
        self.md5code = None

    def setResourceCode(self, resourceCode):
        """
        :param resourceCode: (Optional) 资源code
        """
        self.resourceCode = resourceCode

    def setSliceTotal(self, sliceTotal):
        """
        :param sliceTotal: (Optional) 总片数（建议5MB一片；不分片的文件为1片）
        """
        self.sliceTotal = sliceTotal

    def setMd5code(self, md5code):
        """
        :param md5code: (Optional) 文件md5值
        """
        self.md5code = md5code

