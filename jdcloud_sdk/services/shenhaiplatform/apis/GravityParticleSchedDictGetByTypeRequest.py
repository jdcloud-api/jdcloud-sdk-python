# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class GravityParticleSchedDictGetByTypeRequest(JDCloudRequest):
    """
    根据类型获取数据字典
    """

    def __init__(self, parameters, header=None, version="v2"):
        super(GravityParticleSchedDictGetByTypeRequest, self).__init__(
            '/regions/{regionId}/apps/{appName}/gravityParticleSchedDictGetByType', 'POST', header, version)
        self.parameters = parameters


class GravityParticleSchedDictGetByTypeParameters(object):

    def __init__(self,regionId, appName, ):
        """
        :param regionId: 地域ID
        :param appName: 应用名称
        """

        self.regionId = regionId
        self.appName = appName
        self.id = None
        self.dictCode = None
        self.pDictCode = None
        self.dictName = None
        self.dictSort = None
        self.dictBak = None
        self.dictDesc = None
        self.isValid = None
        self.isDel = None
        self.createdTime = None
        self.modifiedTime = None

    def setId(self, id):
        """
        :param id: (Optional) 数据字典id
        """
        self.id = id

    def setDictCode(self, dictCode):
        """
        :param dictCode: (Optional) 数据字典code
        """
        self.dictCode = dictCode

    def setPDictCode(self, pDictCode):
        """
        :param pDictCode: (Optional) 数据字典父级code
        """
        self.pDictCode = pDictCode

    def setDictName(self, dictName):
        """
        :param dictName: (Optional) 数据字典名称
        """
        self.dictName = dictName

    def setDictSort(self, dictSort):
        """
        :param dictSort: (Optional) 数据字典排序
        """
        self.dictSort = dictSort

    def setDictBak(self, dictBak):
        """
        :param dictBak: (Optional) 数据字典备份
        """
        self.dictBak = dictBak

    def setDictDesc(self, dictDesc):
        """
        :param dictDesc: (Optional) 数据字典描述
        """
        self.dictDesc = dictDesc

    def setIsValid(self, isValid):
        """
        :param isValid: (Optional) 是否有效 1: 有效, 0: 无效
        """
        self.isValid = isValid

    def setIsDel(self, isDel):
        """
        :param isDel: (Optional) 是否删除 1: 删除, 0: 未删除
        """
        self.isDel = isDel

    def setCreatedTime(self, createdTime):
        """
        :param createdTime: (Optional) 创建时间
        """
        self.createdTime = createdTime

    def setModifiedTime(self, modifiedTime):
        """
        :param modifiedTime: (Optional) 修改时间
        """
        self.modifiedTime = modifiedTime

